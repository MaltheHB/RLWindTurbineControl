function [TowerDEL, RotorDEL, BladeDEL] = DEL(baselineData)
TurbineLoads = baselineData(:,[1 8 9 16 17 18 19 2 24 6 25]);
% 1 = time, 2 = wind speed,
% 8 = Rotor Torque, 9 Rotor Thrust,
% 16 = Tower base moment, 17 = Out-of-phase moment
% 18 = flapwise bending moment, 19 = edgewise bending moment
% 24 Generator power, 25 generator torque
% 6 rotor speed

% Rainflow count Tower
% Tower base geometry
R1 = 3.0;                        % Outer radius [m]
t1 = 0.027;                      % Wall thickness [m]
r1 = R1-t1;
D1 = 2 * R1;                      % Outer diameter [m]
d1 = D1 - 2 * t1;                  % Inner diameter [m]
y1 = D1 / 2;                      % Distance to outer fiber [m]
I1 = (pi/4) * (R1^4 - r1^4); % Second moment of area [m^4]
TowerStress = (TurbineLoads(:,4)*1000*y1)/I1;

rf_tower = rainflow(TowerStress,100);

mT1 = 3;% S-N curve slope factor for steel
mT2 = 5;
towercycles = sum(rf_tower(:,1));
N_ref = 5000000; % 
syms sigmar
stress_ref = 355e6*0.75;% 75% of Yield Strength for S355 steel
C = N_ref*(stress_ref);           % Fatigue Strength Coefficient
Towerdamage_combined = 0;
TowerdamageTime = [];
for i = 1:height(rf_tower)
    rangeT = rf_tower(i,2);
    meanT = rf_tower(i,3);
    countT = rf_tower(i,1);
    N_iT = N_ref*(stress_ref/rangeT)^mT2;
    if rangeT>stress_ref
        N_iT = N_ref*(stress_ref/rangeT)^mT1;
    end
    %N_iT = ((X_t+X_c-abs(2*lambda_ma*meanT-X_t+abs(X_c)))/(2*(lambda_mb)*rangeT))^m
    Towerdamage_combined = Towerdamage_combined + countT / N_iT;
    TowerdamageTime(i) =  Towerdamage_combined; 
end
towerLifetime = ((1/Towerdamage_combined)*200)/(60*60*24*365);
TowerLifeCycles = (1/Towerdamage_combined)*towercycles;
TowerDEL = ( sum(rf_tower(:,1) .* rf_tower(:,2).^mT2) / TowerLifeCycles )^(1/mT2);
% Rainflow count Rotor
% Rotor Hub geometry
D3 = 1.5;                        % Outer diameter [m]
t3 = 0.1;                         % Wall thickness [m]
d3 = D3 - 2*t3;                    % Inner diameter [m]
y3 = D3 / 2;                      % Distance from neutral axis to outer fiber [m]
I3 = (pi/4)*y3^4; % Second moment of area [m^4]
rotorStress = (TurbineLoads(:,2)*1000*y3)/I3;

rf_rotor = rainflow(rotorStress,100);
rotorcycles = sum(rf_rotor(:,1));
mR1 = 3;% S-N curve slope factor for steel
mR2 = 5;
N_refR = 5000000; % Cycles to failure at stress of 90e6 Pa
stress_refR = 355e6*0.75;% 75% of Yield Strength for S355 steel
C = N_refR*(stress_refR);           % Fatigue Strength Coefficient
rotordamage_combined = 0;
rotordamageTime = [];
for i = 1:height(rf_rotor)
    rangeR = rf_rotor(i,2);
    meanR = rf_rotor(i,3);
    countR = rf_rotor(i,1);
    N_iR = N_refR*(stress_refR/rangeR)^mR2;
    if rangeR > stress_refR
        N_iR = N_refR*(stress_refR/rangeR)^mR1;
    end
    rotordamage_combined = rotordamage_combined + countR / N_iR;
    rotordamageTime(i) =  rotordamage_combined; 
end

BaselineRotorLifetime = ((1/rotordamage_combined)*200)/(60*60*24*365);
rotorlifecycles = (1/rotordamage_combined)*rotorcycles;
RotorDEL = ( sum(rf_rotor(:,1) .* rf_rotor(:,2).^mT2) / rotorlifecycles )^(1/mT2);
% Rainflow edgewise and flapwise
% blade geometry
% Blade root geometry from NREL 5-MW model
D2 = 3.0;                        % Outer diameter [m]
t2 = 0.05;                       % Wall thickness [m]
d2 = D2 - 2*t2;                    % Inner diameter [m]
y2 = D2 / 2;                      % Distance from neutral axis to outer fiber [m]
I2 = (pi/64) * (D2^4 - d2^4);      % Second moment of area [m^4]
flapstiff = 18110e6;
edgestiff = 18113e6;
bladeEAstiff = 9729e6;
FNblade = 17740*9.81;
Eflap = 43.05e9;
Eedge = 15.99e9;
flapwiseMoment = TurbineLoads(:,6).*1000;
edgewiseMoment = TurbineLoads(:,7).*1000;
% Convert moments to stress time series (in Pa)
stress_flap = (flapwiseMoment * y2) / I2;%flapstiff)*Eflap;%I2;
stress_edge = (edgewiseMoment * y2) / I2;%edgestiff)*Eedge;%I2;
% Optional: Total stress or worst-case
stress_combined = sqrt(stress_flap.^2 + stress_edge.^2);  % conservative

% Now perform rainflow counting and fatigue for each
rf_flap = rainflow(stress_flap,100);
rf_edge = rainflow(stress_edge,100);
rf_combined = rainflow(stress_combined,100);
[CountBlade, hist2, edges2, rmm2, idx2] = rainflow(stress_combined,100);  % optional
bladeCount = sum(hist2,2);
bladeBin = edges2;
bladeBinEdges = bladeBin(1:end-1);
% Define S-N curve parameters
m = 9;             % typical for composites (higher than steel)
N_refB = 1;  

X_t = 601.8e6;%793.05*10^6; % Tension strenght in Pa
X_c = 407.3e6;%542.49*10^6; % Compression strength in Pa
lambda_ma = 1.35*1.35*1.1*1.1*1; % partial safety factor short term strength
lambda_mb = 1.35*1.1*1.2; % partial safety factor fatigue strength
stress_refB = 505e6/lambda_mb;
totalCycles=sum(rf_combined(:,1));
damage_combined = 0;
damageTime = [];
stressmeanmean = mean2(rf_combined(:,3));
stressampmean = mean2(rf_combined(:,2))/2;
for i = 1:height(rf_combined)
    range = rf_combined(i,2);
    mean = rf_combined(i,3);
    amplitude = (range/2);
    count = rf_combined(i,1);
    N_i = ((X_t+X_c-abs(2*lambda_ma*mean-X_t+abs(X_c)))/(2*(lambda_mb)*range))^m;
    C_1b = N_i^(1/m);
    lambda_mb2 = lambda_mb*C_1b;
    stress_refB2 = stress_refB/lambda_mb2;
    damage_combined = damage_combined + count / N_i;
    damageTime(i) = damage_combined; 
end
DamageEq = damage_combined/totalCycles;
lifeCycles = (1/damage_combined)*totalCycles;
BladeDEL = ( sum(rf_combined(:,1) .* rf_combined(:,2).^m) / lifeCycles )^(1/m);
BaselineBladeLifetime = ((1/damage_combined)*200)/(60*60*24*365);
end